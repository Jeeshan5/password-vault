{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mojee/Desktop/Projects/password-vault/frontend/components/PasswordGenerator.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useCallback } from 'react';\r\n\r\ninterface PasswordGeneratorProps {\r\n  onPasswordGenerated?: (password: string) => void;\r\n  className?: string;\r\n}\r\n\r\nexport default function PasswordGenerator({ onPasswordGenerated, className = '' }: PasswordGeneratorProps) {\r\n  const [password, setPassword] = useState('');\r\n  const [length, setLength] = useState(16);\r\n  const [includeUppercase, setIncludeUppercase] = useState(true);\r\n  const [includeLowercase, setIncludeLowercase] = useState(true);\r\n  const [includeNumbers, setIncludeNumbers] = useState(true);\r\n  const [includeSymbols, setIncludeSymbols] = useState(true);\r\n  const [excludeSimilar, setExcludeSimilar] = useState(true);\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  // Character sets\r\n  const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';\r\n  const numberChars = '0123456789';\r\n  const symbolChars = '!@#$%^&*()_+-=[]{}|;:,.<>?';\r\n  const similarChars = 'il1Lo0O'; // Characters that look similar\r\n\r\n  const generatePassword = useCallback(() => {\r\n    let charset = '';\r\n    \r\n    if (includeUppercase) charset += uppercaseChars;\r\n    if (includeLowercase) charset += lowercaseChars;\r\n    if (includeNumbers) charset += numberChars;\r\n    if (includeSymbols) charset += symbolChars;\r\n\r\n    if (!charset) {\r\n      setPassword('Please select at least one character type');\r\n      return;\r\n    }\r\n\r\n    // Remove similar looking characters if option is enabled\r\n    if (excludeSimilar) {\r\n      charset = charset.split('').filter(char => !similarChars.includes(char)).join('');\r\n    }\r\n\r\n    let result = '';\r\n    \r\n    // Ensure at least one character from each selected type\r\n    const requiredChars = [];\r\n    if (includeUppercase) requiredChars.push(uppercaseChars[Math.floor(Math.random() * uppercaseChars.length)]);\r\n    if (includeLowercase) requiredChars.push(lowercaseChars[Math.floor(Math.random() * lowercaseChars.length)]);\r\n    if (includeNumbers) requiredChars.push(numberChars[Math.floor(Math.random() * numberChars.length)]);\r\n    if (includeSymbols) requiredChars.push(symbolChars[Math.floor(Math.random() * symbolChars.length)]);\r\n\r\n    // Fill the rest randomly\r\n    for (let i = requiredChars.length; i < length; i++) {\r\n      requiredChars.push(charset[Math.floor(Math.random() * charset.length)]);\r\n    }\r\n\r\n    // Shuffle the array to avoid predictable patterns\r\n    for (let i = requiredChars.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [requiredChars[i], requiredChars[j]] = [requiredChars[j], requiredChars[i]];\r\n    }\r\n\r\n    result = requiredChars.join('');\r\n    setPassword(result);\r\n    \r\n    if (onPasswordGenerated) {\r\n      onPasswordGenerated(result);\r\n    }\r\n  }, [length, includeUppercase, includeLowercase, includeNumbers, includeSymbols, excludeSimilar, onPasswordGenerated]);\r\n\r\n  const copyToClipboard = async () => {\r\n    if (!password || password === 'Please select at least one character type') return;\r\n    \r\n    try {\r\n      await navigator.clipboard.writeText(password);\r\n      setCopied(true);\r\n      setTimeout(async () => {\r\n        // Auto-clear clipboard after 15 seconds for security\r\n        try {\r\n          await navigator.clipboard.writeText('');\r\n        } catch {\r\n          // May be blocked by browser - ignore silently\r\n        }\r\n        setCopied(false);\r\n      }, 15000);\r\n    } catch (error) {\r\n      console.error('Failed to copy password:', error);\r\n    }\r\n  };\r\n\r\n  const getPasswordStrength = () => {\r\n    if (!password || password === 'Please select at least one character type') return { strength: 0, label: 'None', color: 'gray' };\r\n    \r\n    let score = 0;\r\n    if (password.length >= 8) score += 1;\r\n    if (password.length >= 12) score += 1;\r\n    if (password.length >= 16) score += 1;\r\n    if (/[a-z]/.test(password)) score += 1;\r\n    if (/[A-Z]/.test(password)) score += 1;\r\n    if (/[0-9]/.test(password)) score += 1;\r\n    if (/[^A-Za-z0-9]/.test(password)) score += 1;\r\n\r\n    if (score <= 2) return { strength: score, label: 'Weak', color: 'red' };\r\n    if (score <= 4) return { strength: score, label: 'Fair', color: 'yellow' };\r\n    if (score <= 6) return { strength: score, label: 'Good', color: 'blue' };\r\n    return { strength: score, label: 'Strong', color: 'green' };\r\n  };\r\n\r\n  const strength = getPasswordStrength();\r\n\r\n  return (\r\n    <div className={`bg-white/80 dark:bg-gray-800/80 backdrop-blur-md rounded-2xl shadow-xl border border-white/20 dark:border-gray-700/50 p-6 ${className}`}>\r\n      <div className=\"flex items-center mb-6\">\r\n        <div className=\"w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-600 rounded-xl flex items-center justify-center shadow-lg transform rotate-3 hover:rotate-0 transition-transform duration-300 mr-3\">\r\n          <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n          </svg>\r\n        </div>\r\n        <h3 className=\"text-xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent\">\r\n          Password Generator\r\n        </h3>\r\n      </div>\r\n\r\n      {/* Generated Password Display */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2\">\r\n          Generated Password\r\n        </label>\r\n        <div className=\"relative\">\r\n          <input\r\n            type=\"text\"\r\n            value={password}\r\n            readOnly\r\n            className=\"w-full px-4 py-3 pr-12 bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-xl text-sm font-mono focus:outline-none focus:ring-2 focus:ring-purple-500/50 dark:text-white\"\r\n            placeholder=\"Click 'Generate' to create a password\"\r\n          />\r\n          <button\r\n            onClick={copyToClipboard}\r\n            disabled={!password || password === 'Please select at least one character type'}\r\n            className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-purple-600 dark:hover:text-purple-400 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\"\r\n            title=\"Copy to clipboard\"\r\n          >\r\n            {copied ? (\r\n              <svg className=\"w-5 h-5 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n              </svg>\r\n            ) : (\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Password Strength Indicator */}\r\n        {password && password !== 'Please select at least one character type' && (\r\n          <div className=\"mt-2 flex items-center space-x-2\">\r\n            <div className=\"flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n              <div\r\n                className={`h-2 rounded-full transition-all duration-500 bg-${strength.color}-500`}\r\n                style={{ width: `${(strength.strength / 7) * 100}%` }}\r\n              ></div>\r\n            </div>\r\n            <span className={`text-sm font-medium text-${strength.color}-600 dark:text-${strength.color}-400`}>\r\n              {strength.label}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Length Slider */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2\">\r\n          Length: {length} characters\r\n        </label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"8\"\r\n          max=\"64\"\r\n          value={length}\r\n          onChange={(e) => setLength(parseInt(e.target.value))}\r\n          className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\r\n        />\r\n        <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n          <span>8</span>\r\n          <span>64</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Character Type Options */}\r\n      <div className=\"space-y-3 mb-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <label className=\"flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={includeUppercase}\r\n              onChange={(e) => setIncludeUppercase(e.target.checked)}\r\n              className=\"sr-only\"\r\n            />\r\n            <div className={`w-5 h-5 rounded border-2 mr-3 flex items-center justify-center transition-colors ${includeUppercase ? 'bg-purple-500 border-purple-500' : 'border-gray-300 dark:border-gray-600'}`}>\r\n              {includeUppercase && (\r\n                <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Uppercase Letters</span>\r\n          </label>\r\n          <span className=\"text-xs text-gray-500 font-mono\">ABC</span>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <label className=\"flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={includeLowercase}\r\n              onChange={(e) => setIncludeLowercase(e.target.checked)}\r\n              className=\"sr-only\"\r\n            />\r\n            <div className={`w-5 h-5 rounded border-2 mr-3 flex items-center justify-center transition-colors ${includeLowercase ? 'bg-purple-500 border-purple-500' : 'border-gray-300 dark:border-gray-600'}`}>\r\n              {includeLowercase && (\r\n                <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Lowercase Letters</span>\r\n          </label>\r\n          <span className=\"text-xs text-gray-500 font-mono\">abc</span>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <label className=\"flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={includeNumbers}\r\n              onChange={(e) => setIncludeNumbers(e.target.checked)}\r\n              className=\"sr-only\"\r\n            />\r\n            <div className={`w-5 h-5 rounded border-2 mr-3 flex items-center justify-center transition-colors ${includeNumbers ? 'bg-purple-500 border-purple-500' : 'border-gray-300 dark:border-gray-600'}`}>\r\n              {includeNumbers && (\r\n                <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Numbers</span>\r\n          </label>\r\n          <span className=\"text-xs text-gray-500 font-mono\">123</span>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <label className=\"flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={includeSymbols}\r\n              onChange={(e) => setIncludeSymbols(e.target.checked)}\r\n              className=\"sr-only\"\r\n            />\r\n            <div className={`w-5 h-5 rounded border-2 mr-3 flex items-center justify-center transition-colors ${includeSymbols ? 'bg-purple-500 border-purple-500' : 'border-gray-300 dark:border-gray-600'}`}>\r\n              {includeSymbols && (\r\n                <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Symbols</span>\r\n          </label>\r\n          <span className=\"text-xs text-gray-500 font-mono\">!@#</span>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <label className=\"flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={excludeSimilar}\r\n              onChange={(e) => setExcludeSimilar(e.target.checked)}\r\n              className=\"sr-only\"\r\n            />\r\n            <div className={`w-5 h-5 rounded border-2 mr-3 flex items-center justify-center transition-colors ${excludeSimilar ? 'bg-purple-500 border-purple-500' : 'border-gray-300 dark:border-gray-600'}`}>\r\n              {excludeSimilar && (\r\n                <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Exclude Similar Characters</span>\r\n          </label>\r\n          <span className=\"text-xs text-gray-500 font-mono\">il1Lo0O</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Generate Button */}\r\n      <button\r\n        onClick={generatePassword}\r\n        className=\"w-full py-3 px-6 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-bold rounded-xl shadow-lg hover:shadow-xl transition-all duration-200 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500/50\"\r\n      >\r\n        <div className=\"flex items-center justify-center\">\r\n          <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n          </svg>\r\n          Generate Password\r\n        </div>\r\n      </button>\r\n\r\n      {copied && (\r\n        <div className=\"mt-3 text-center text-sm text-green-600 dark:text-green-400 font-medium\">\r\n          ✓ Password copied! Will clear from clipboard in 15 seconds\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 791, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mojee/Desktop/Projects/password-vault/frontend/utils/crypto.ts"],"sourcesContent":["/**\r\n * Simplified client-side encryption utilities using Web Crypto API\r\n * For demo purposes - in production, use proper AES-GCM encryption\r\n */\r\n\r\n/**\r\n * Simple encryption using a master password\r\n * This is a demo implementation - in production use proper encryption\r\n */\r\nexport async function encryptData(plaintext: string, masterPassword: string): Promise<string> {\r\n  try {\r\n    // Simple base64 encoding with password obfuscation for demo\r\n    // In production, use proper AES encryption\r\n    const combined = masterPassword + '|' + plaintext;\r\n    return btoa(combined);\r\n  } catch (error) {\r\n    console.error('Encryption failed:', error);\r\n    throw new Error('Failed to encrypt data');\r\n  }\r\n}\r\n\r\n/**\r\n * Simple decryption using a master password\r\n * This is a demo implementation - in production use proper decryption\r\n */\r\nexport async function decryptData(encryptedData: string, masterPassword: string): Promise<string> {\r\n  try {\r\n    // Simple base64 decoding for demo\r\n    // In production, use proper AES decryption\r\n    const combined = atob(encryptedData);\r\n    const parts = combined.split('|');\r\n    if (parts.length !== 2 || parts[0] !== masterPassword) {\r\n      throw new Error('Invalid master password');\r\n    }\r\n    return parts[1];\r\n  } catch (error) {\r\n    console.error('Decryption failed:', error);\r\n    throw new Error('Failed to decrypt data - invalid master password or corrupted data');\r\n  }\r\n}\r\n\r\n/**\r\n * Generate a secure hash of the master password for verification\r\n */\r\nexport async function hashMasterPassword(masterPassword: string): Promise<string> {\r\n  try {\r\n    // Simple hashing for demo - in production use proper PBKDF2\r\n    return btoa(masterPassword + '_hashed');\r\n  } catch (error) {\r\n    console.error('Hashing failed:', error);\r\n    throw new Error('Failed to hash master password');\r\n  }\r\n}\r\n\r\n/**\r\n * Verify a master password against its hash\r\n */\r\nexport async function verifyMasterPassword(masterPassword: string, hash: string): Promise<boolean> {\r\n  try {\r\n    const expectedHash = await hashMasterPassword(masterPassword);\r\n    return expectedHash === hash;\r\n  } catch (error) {\r\n    console.error('Password verification failed:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Test if Web Crypto API is available\r\n */\r\nexport function isCryptoSupported(): boolean {\r\n  return typeof crypto !== 'undefined' && \r\n         typeof crypto.subtle !== 'undefined' && \r\n         typeof crypto.getRandomValues === 'function';\r\n}\r\n\r\n/**\r\n * Generate a secure random password\r\n */\r\nexport function generateSecurePassword(length: number = 16): string {\r\n  const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?';\r\n  const randomBytes = crypto.getRandomValues(new Uint8Array(length));\r\n  let password = '';\r\n  \r\n  for (let i = 0; i < length; i++) {\r\n    password += charset[randomBytes[i] % charset.length];\r\n  }\r\n  \r\n  return password;\r\n}\r\n\r\nexport default {\r\n  encryptData,\r\n  decryptData,\r\n  hashMasterPassword,\r\n  verifyMasterPassword,\r\n  isCryptoSupported,\r\n  generateSecurePassword\r\n};"],"names":[],"mappings":"AAAA;;;CAGC,GAED;;;CAGC;;;;;;;;;;;;;;;;AACM,eAAe,YAAY,SAAiB,EAAE,cAAsB;IACzE,IAAI;QACF,4DAA4D;QAC5D,2CAA2C;QAC3C,MAAM,WAAW,iBAAiB,MAAM;QACxC,OAAO,KAAK;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM,IAAI,MAAM;IAClB;AACF;AAMO,eAAe,YAAY,aAAqB,EAAE,cAAsB;IAC7E,IAAI;QACF,kCAAkC;QAClC,2CAA2C;QAC3C,MAAM,WAAW,KAAK;QACtB,MAAM,QAAQ,SAAS,KAAK,CAAC;QAC7B,IAAI,MAAM,MAAM,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK,gBAAgB;YACrD,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,KAAK,CAAC,EAAE;IACjB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM,IAAI,MAAM;IAClB;AACF;AAKO,eAAe,mBAAmB,cAAsB;IAC7D,IAAI;QACF,4DAA4D;QAC5D,OAAO,KAAK,iBAAiB;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,MAAM,IAAI,MAAM;IAClB;AACF;AAKO,eAAe,qBAAqB,cAAsB,EAAE,IAAY;IAC7E,IAAI;QACF,MAAM,eAAe,MAAM,mBAAmB;QAC9C,OAAO,iBAAiB;IAC1B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;IACT;AACF;AAKO,SAAS;IACd,OAAO,OAAO,WAAW,eAClB,OAAO,OAAO,MAAM,KAAK,eACzB,OAAO,OAAO,eAAe,KAAK;AAC3C;AAKO,SAAS,uBAAuB,SAAiB,EAAE;IACxD,MAAM,UAAU;IAChB,MAAM,cAAc,OAAO,eAAe,CAAC,IAAI,WAAW;IAC1D,IAAI,WAAW;IAEf,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;QAC/B,YAAY,OAAO,CAAC,WAAW,CAAC,EAAE,GAAG,QAAQ,MAAM,CAAC;IACtD;IAEA,OAAO;AACT;uCAEe;IACb;IACA;IACA;IACA;IACA;IACA;AACF","debugId":null}},
    {"offset": {"line": 881, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mojee/Desktop/Projects/password-vault/frontend/components/VaultList.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { VaultItem, vaultAPI } from '@/utils/api';\r\nimport { decryptData } from '@/utils/crypto';\r\n\r\ninterface VaultListProps {\r\n  masterPassword: string;\r\n  onEdit: (item: VaultItem) => void;\r\n  refreshTrigger: number;\r\n  searchQuery?: string;\r\n}\r\n\r\nexport default function VaultList({ masterPassword, onEdit, refreshTrigger, searchQuery = '' }: VaultListProps) {\r\n  const [items, setItems] = useState<VaultItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [copiedId, setCopiedId] = useState<string | null>(null);\r\n  const [visiblePasswords, setVisiblePasswords] = useState<Set<string>>(new Set());\r\n\r\n  const loadItems = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await vaultAPI.getAll();\r\n      \r\n      // Decrypt items\r\n      const decryptedItems = await Promise.all(\r\n        response.data.items.map(async (item) => {\r\n          try {\r\n            return {\r\n              ...item,\r\n              password: await decryptData(item.password, masterPassword),\r\n              notes: item.notes ? await decryptData(item.notes, masterPassword) : ''\r\n            };\r\n          } catch (decryptError) {\r\n            console.error('Failed to decrypt item:', item._id, decryptError);\r\n            return {\r\n              ...item,\r\n              password: '[Decryption Failed]',\r\n              notes: '[Decryption Failed]'\r\n            };\r\n          }\r\n        })\r\n      );\r\n      \r\n      setItems(decryptedItems);\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to load vault items';\r\n      setError(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [masterPassword]);\r\n\r\n  useEffect(() => {\r\n    loadItems();\r\n  }, [refreshTrigger, loadItems]);\r\n\r\n  const handleDelete = async (id: string) => {\r\n    if (!window.confirm('Are you sure you want to delete this item?')) return;\r\n    \r\n    try {\r\n      await vaultAPI.delete(id);\r\n      setItems(items.filter(item => item._id !== id));\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to delete item';\r\n      setError(errorMessage);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = async (text: string, id: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setCopiedId(id);\r\n      \r\n      // Auto-clear clipboard after 15 seconds\r\n      setTimeout(async () => {\r\n        try {\r\n          await navigator.clipboard.writeText('');\r\n        } catch {\r\n          // May be blocked by browser - ignore silently\r\n        }\r\n        setCopiedId(null);\r\n      }, 15000);\r\n    } catch (error) {\r\n      console.error('Failed to copy to clipboard:', error);\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = (id: string) => {\r\n    const newVisible = new Set(visiblePasswords);\r\n    if (newVisible.has(id)) {\r\n      newVisible.delete(id);\r\n    } else {\r\n      newVisible.add(id);\r\n    }\r\n    setVisiblePasswords(newVisible);\r\n  };\r\n\r\n  // Filter items based on search query\r\n  const filteredItems = items.filter(item => {\r\n    if (!searchQuery.trim()) return true;\r\n    const query = searchQuery.toLowerCase();\r\n    return (\r\n      item.title.toLowerCase().includes(query) ||\r\n      item.username.toLowerCase().includes(query) ||\r\n      item.url?.toLowerCase().includes(query) ||\r\n      item.notes?.toLowerCase().includes(query)\r\n    );\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-md rounded-2xl shadow-xl border border-white/20 dark:border-gray-700/50 p-8\">\r\n        <div className=\"flex items-center justify-center\">\r\n          <svg className=\"animate-spin h-8 w-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n          <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Loading your vault...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-md rounded-2xl shadow-xl border border-white/20 dark:border-gray-700/50 p-8\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-16 h-16 bg-red-100 dark:bg-red-900/20 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <svg className=\"w-8 h-8 text-red-600 dark:text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.464 0L4.35 15.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n            </svg>\r\n          </div>\r\n          <p className=\"text-red-600 dark:text-red-400 font-medium\">{error}</p>\r\n          <button\r\n            onClick={loadItems}\r\n            className=\"mt-4 px-4 py-2 bg-red-600 text-white rounded-xl hover:bg-red-700 transition-colors\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (filteredItems.length === 0) {\r\n    return (\r\n      <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-md rounded-2xl shadow-xl border border-white/20 dark:border-gray-700/50 p-8\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-16 h-16 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n            {searchQuery ? 'No matching items found' : 'Your vault is empty'}\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            {searchQuery\r\n              ? `No items match \"${searchQuery}\". Try a different search term.`\r\n              : 'Add your first password to get started securing your accounts.'\r\n            }\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent\">\r\n          {searchQuery ? `Search Results (${filteredItems.length})` : `Your Passwords (${filteredItems.length})`}\r\n        </h2>\r\n      </div>\r\n\r\n      {filteredItems.map((item) => (\r\n        <div\r\n          key={item._id}\r\n          className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-md rounded-2xl shadow-xl border border-white/20 dark:border-gray-700/50 p-6 hover:shadow-2xl transition-all duration-300 hover:scale-[1.02]\"\r\n        >\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"flex-1 min-w-0\">\r\n              <div className=\"flex items-center mb-3\">\r\n                <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center shadow-lg mr-3\">\r\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\r\n                  </svg>\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white truncate\">\r\n                    {item.title}\r\n                  </h3>\r\n                  {item.url && (\r\n                    <a\r\n                      href={item.url.startsWith('http') ? item.url : `https://${item.url}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"text-sm text-blue-600 dark:text-blue-400 hover:underline truncate block\"\r\n                    >\r\n                      {item.url}\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                {/* Username */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                    Username\r\n                  </label>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"flex-1 px-3 py-2 bg-gray-50 dark:bg-gray-700 rounded-lg text-sm font-mono text-gray-900 dark:text-white truncate\">\r\n                      {item.username}\r\n                    </div>\r\n                    <button\r\n                      onClick={() => copyToClipboard(item.username, `username-${item._id}`)}\r\n                      className=\"p-2 text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\r\n                      title=\"Copy username\"\r\n                    >\r\n                      {copiedId === `username-${item._id}` ? (\r\n                        <svg className=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                        </svg>\r\n                      ) : (\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                        </svg>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Password */}\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                    Password\r\n                  </label>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"flex-1 px-3 py-2 bg-gray-50 dark:bg-gray-700 rounded-lg text-sm font-mono text-gray-900 dark:text-white\">\r\n                      {visiblePasswords.has(item._id!) ? item.password : '••••••••••••'}\r\n                    </div>\r\n                    <button\r\n                      onClick={() => togglePasswordVisibility(item._id!)}\r\n                      className=\"p-2 text-gray-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors\"\r\n                      title={visiblePasswords.has(item._id!) ? 'Hide password' : 'Show password'}\r\n                    >\r\n                      {visiblePasswords.has(item._id!) ? (\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L8.464 8.464M9.878 9.878A3 3 0 1012 6.5m2.122 2.878l4.242 4.242M15.12 15.12L19.5 19.5\" />\r\n                        </svg>\r\n                      ) : (\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                        </svg>\r\n                      )}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => copyToClipboard(item.password, `password-${item._id}`)}\r\n                      className=\"p-2 text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\r\n                      title=\"Copy password\"\r\n                    >\r\n                      {copiedId === `password-${item._id}` ? (\r\n                        <svg className=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                        </svg>\r\n                      ) : (\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                        </svg>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Notes */}\r\n              {item.notes && (\r\n                <div className=\"mt-4\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                    Notes\r\n                  </label>\r\n                  <div className=\"px-3 py-2 bg-gray-50 dark:bg-gray-700 rounded-lg text-sm text-gray-900 dark:text-white\">\r\n                    {item.notes}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Actions */}\r\n            <div className=\"flex items-center space-x-2 ml-4\">\r\n              <button\r\n                onClick={() => onEdit(item)}\r\n                className=\"p-2 text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\r\n                title=\"Edit item\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                </svg>\r\n              </button>\r\n              <button\r\n                onClick={() => handleDelete(item._id!)}\r\n                className=\"p-2 text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors\"\r\n                title=\"Delete item\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {copiedId?.includes(item._id!) && (\r\n            <div className=\"mt-3 text-center text-sm text-green-600 dark:text-green-400 font-medium\">\r\n              ✓ Copied! Will clear from clipboard in 15 seconds\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1610, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mojee/Desktop/Projects/password-vault/frontend/components/VaultItemForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { VaultItem, vaultAPI } from '../utils/api';\r\nimport { encryptData } from '../utils/crypto';\r\nimport PasswordGenerator from './PasswordGenerator';\r\n\r\ninterface VaultItemFormProps {\r\n  item?: VaultItem;\r\n  masterPassword: string;\r\n  onSave: () => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport default function VaultItemForm({ item, masterPassword, onSave, onCancel }: VaultItemFormProps) {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    username: '',\r\n    password: '',\r\n    url: '',\r\n    notes: ''\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showGenerator, setShowGenerator] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      setFormData({\r\n        title: item.title || '',\r\n        username: item.username || '',\r\n        password: item.password || '',\r\n        url: item.url || '',\r\n        notes: item.notes || ''\r\n      });\r\n    }\r\n  }, [item]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Encrypt sensitive data\r\n      const encryptedPassword = await encryptData(formData.password, masterPassword);\r\n      const encryptedNotes = formData.notes ? await encryptData(formData.notes, masterPassword) : '';\r\n\r\n      const itemData = {\r\n        title: formData.title,\r\n        username: formData.username,\r\n        password: encryptedPassword,\r\n        url: formData.url,\r\n        notes: encryptedNotes\r\n      };\r\n\r\n      if (item?._id) {\r\n        await vaultAPI.update(item._id, itemData);\r\n      } else {\r\n        await vaultAPI.create(itemData);\r\n      }\r\n\r\n      onSave();\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to save item';\r\n      setError(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordGenerated = (password: string) => {\r\n    setFormData({ ...formData, password });\r\n    setShowGenerator(false);\r\n  };\r\n\r\n  const copyToClipboard = async (text: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      // Could add a toast notification here\r\n    } catch (error) {\r\n      console.error('Failed to copy to clipboard:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white/90 dark:bg-gray-800/90 backdrop-blur-md rounded-2xl shadow-2xl border border-white/20 dark:border-gray-700/50 p-8 max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center shadow-lg mr-3\">\r\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent\">\r\n              {item ? 'Edit Password' : 'Add New Password'}\r\n            </h2>\r\n          </div>\r\n          <button\r\n            onClick={onCancel}\r\n            className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 text-red-700 dark:text-red-400 px-4 py-3 rounded-xl mb-6\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          {/* Title */}\r\n          <div>\r\n            <label htmlFor=\"title\" className=\"block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\r\n              <div className=\"w-4 h-4 bg-gradient-to-br from-blue-400 to-cyan-500 rounded-lg mr-2\"></div>\r\n              Title\r\n            </label>\r\n            <input\r\n              id=\"title\"\r\n              type=\"text\"\r\n              required\r\n              className=\"block w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-xl shadow-inner placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 dark:text-white transition-all duration-200 hover:shadow-md focus:bg-white dark:focus:bg-gray-700\"\r\n              placeholder=\"e.g., Gmail, Facebook, Work Email\"\r\n              value={formData.title}\r\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n            />\r\n          </div>\r\n\r\n          {/* Username */}\r\n          <div>\r\n            <label htmlFor=\"username\" className=\"block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\r\n              <div className=\"w-4 h-4 bg-gradient-to-br from-green-400 to-emerald-500 rounded-lg mr-2\"></div>\r\n              Username/Email\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                id=\"username\"\r\n                type=\"text\"\r\n                required\r\n                className=\"block w-full px-4 py-3 pr-12 bg-white/50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-xl shadow-inner placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 dark:text-white transition-all duration-200 hover:shadow-md focus:bg-white dark:focus:bg-gray-700\"\r\n                placeholder=\"Enter username or email\"\r\n                value={formData.username}\r\n                onChange={(e) => setFormData({ ...formData, username: e.target.value })}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => copyToClipboard(formData.username)}\r\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200\"\r\n                title=\"Copy username\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Password */}\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\r\n              <div className=\"w-4 h-4 bg-gradient-to-br from-purple-400 to-pink-500 rounded-lg mr-2\"></div>\r\n              Password\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                id=\"password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                required\r\n                className=\"block w-full px-4 py-3 pr-20 bg-white/50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-xl shadow-inner placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 dark:text-white transition-all duration-200 hover:shadow-md focus:bg-white dark:focus:bg-gray-700 font-mono\"\r\n                placeholder=\"Enter password\"\r\n                value={formData.password}\r\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n              />\r\n              <div className=\"absolute inset-y-0 right-0 flex items-center space-x-1 pr-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"text-gray-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors duration-200\"\r\n                  title={showPassword ? 'Hide password' : 'Show password'}\r\n                >\r\n                  {showPassword ? (\r\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L8.464 8.464M9.878 9.878A3 3 0 1012 6.5m2.122 2.878l4.242 4.242M15.12 15.12L19.5 19.5\" />\r\n                    </svg>\r\n                  ) : (\r\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                    </svg>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => copyToClipboard(formData.password)}\r\n                  className=\"text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200\"\r\n                  title=\"Copy password\"\r\n                >\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowGenerator(!showGenerator)}\r\n              className=\"mt-2 text-sm text-purple-600 dark:text-purple-400 hover:text-purple-700 dark:hover:text-purple-300 font-medium flex items-center\"\r\n            >\r\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1 1 21 9z\" />\r\n              </svg>\r\n              {showGenerator ? 'Hide Generator' : 'Generate Strong Password'}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Password Generator */}\r\n          {showGenerator && (\r\n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\r\n              <PasswordGenerator\r\n                onPasswordGenerated={handlePasswordGenerated}\r\n                className=\"mb-0\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* URL */}\r\n          <div>\r\n            <label htmlFor=\"url\" className=\"block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\r\n              <div className=\"w-4 h-4 bg-gradient-to-br from-orange-400 to-red-500 rounded-lg mr-2\"></div>\r\n              Website URL (optional)\r\n            </label>\r\n            <input\r\n              id=\"url\"\r\n              type=\"url\"\r\n              className=\"block w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-xl shadow-inner placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 dark:text-white transition-all duration-200 hover:shadow-md focus:bg-white dark:focus:bg-gray-700\"\r\n              placeholder=\"https://example.com\"\r\n              value={formData.url}\r\n              onChange={(e) => setFormData({ ...formData, url: e.target.value })}\r\n            />\r\n          </div>\r\n\r\n          {/* Notes */}\r\n          <div>\r\n            <label htmlFor=\"notes\" className=\"block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\r\n              <div className=\"w-4 h-4 bg-gradient-to-br from-gray-400 to-gray-600 rounded-lg mr-2\"></div>\r\n              Notes (optional)\r\n            </label>\r\n            <textarea\r\n              id=\"notes\"\r\n              rows={4}\r\n              className=\"block w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-xl shadow-inner placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 dark:text-white transition-all duration-200 hover:shadow-md focus:bg-white dark:focus:bg-gray-700 resize-vertical\"\r\n              placeholder=\"Any additional notes or information...\"\r\n              value={formData.notes}\r\n              onChange={(e) => setFormData({ ...formData, notes: e.target.value })}\r\n            />\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex items-center justify-end space-x-4 pt-6 border-t border-gray-200 dark:border-gray-700\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onCancel}\r\n              className=\"px-6 py-3 border border-gray-200 dark:border-gray-600 text-gray-700 dark:text-gray-300 bg-white/80 dark:bg-gray-700/80 backdrop-blur-md rounded-xl hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 hover:scale-105\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"px-6 py-3 border border-transparent rounded-xl shadow-lg text-base font-bold text-white bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 hover:scale-105 hover:shadow-xl\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"flex items-center\">\r\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                  </svg>\r\n                  Saving...\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                  {item ? 'Update Password' : 'Save to Vault'}\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAce,SAAS,cAAc,EAAE,IAAI,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAsB;IAClG,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;QACvC,OAAO;QACP,UAAU;QACV,UAAU;QACV,KAAK;QACL,OAAO;IACT;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC;IACjD,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAC;IACnD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC;IAEnC,IAAA,kNAAS,EAAC;QACR,IAAI,MAAM;YACR,YAAY;gBACV,OAAO,KAAK,KAAK,IAAI;gBACrB,UAAU,KAAK,QAAQ,IAAI;gBAC3B,UAAU,KAAK,QAAQ,IAAI;gBAC3B,KAAK,KAAK,GAAG,IAAI;gBACjB,OAAO,KAAK,KAAK,IAAI;YACvB;QACF;IACF,GAAG;QAAC;KAAK;IAET,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,aAAa;QACb,SAAS;QAET,IAAI;YACF,yBAAyB;YACzB,MAAM,oBAAoB,MAAM,IAAA,8HAAW,EAAC,SAAS,QAAQ,EAAE;YAC/D,MAAM,iBAAiB,SAAS,KAAK,GAAG,MAAM,IAAA,8HAAW,EAAC,SAAS,KAAK,EAAE,kBAAkB;YAE5F,MAAM,WAAW;gBACf,OAAO,SAAS,KAAK;gBACrB,UAAU,SAAS,QAAQ;gBAC3B,UAAU;gBACV,KAAK,SAAS,GAAG;gBACjB,OAAO;YACT;YAEA,IAAI,MAAM,KAAK;gBACb,MAAM,wHAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;YAClC,OAAO;gBACL,MAAM,wHAAQ,CAAC,MAAM,CAAC;YACxB;YAEA;QACF,EAAE,OAAO,OAAgB;YACvB,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAC9D,SAAS;QACX,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,0BAA0B,CAAC;QAC/B,YAAY;YAAE,GAAG,QAAQ;YAAE;QAAS;QACpC,iBAAiB;IACnB;IAEA,MAAM,kBAAkB,OAAO;QAC7B,IAAI;YACF,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;QACpC,sCAAsC;QACxC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAAqB,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDAC5E,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,8OAAC;oCAAG,WAAU;8CACX,OAAO,kBAAkB;;;;;;;;;;;;sCAG9B,8OAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,8OAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,8OAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;gBAK1E,uBACC,8OAAC;oBAAI,WAAU;8BACZ;;;;;;8BAIL,8OAAC;oBAAK,UAAU;oBAAc,WAAU;;sCAEtC,8OAAC;;8CACC,8OAAC;oCAAM,SAAQ;oCAAQ,WAAU;;sDAC/B,8OAAC;4CAAI,WAAU;;;;;;wCAA4E;;;;;;;8CAG7F,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,QAAQ;oCACR,WAAU;oCACV,aAAY;oCACZ,OAAO,SAAS,KAAK;oCACrB,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wCAAC;;;;;;;;;;;;sCAKtE,8OAAC;;8CACC,8OAAC;oCAAM,SAAQ;oCAAW,WAAU;;sDAClC,8OAAC;4CAAI,WAAU;;;;;;wCAAgF;;;;;;;8CAGjG,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,QAAQ;4CACR,WAAU;4CACV,aAAY;4CACZ,OAAO,SAAS,QAAQ;4CACxB,UAAU,CAAC,IAAM,YAAY;oDAAE,GAAG,QAAQ;oDAAE,UAAU,EAAE,MAAM,CAAC,KAAK;gDAAC;;;;;;sDAEvE,8OAAC;4CACC,MAAK;4CACL,SAAS,IAAM,gBAAgB,SAAS,QAAQ;4CAChD,WAAU;4CACV,OAAM;sDAEN,cAAA,8OAAC;gDAAI,WAAU;gDAAU,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACjE,cAAA,8OAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAO7E,8OAAC;;8CACC,8OAAC;oCAAM,SAAQ;oCAAW,WAAU;;sDAClC,8OAAC;4CAAI,WAAU;;;;;;wCAA8E;;;;;;;8CAG/F,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,IAAG;4CACH,MAAM,eAAe,SAAS;4CAC9B,QAAQ;4CACR,WAAU;4CACV,aAAY;4CACZ,OAAO,SAAS,QAAQ;4CACxB,UAAU,CAAC,IAAM,YAAY;oDAAE,GAAG,QAAQ;oDAAE,UAAU,EAAE,MAAM,CAAC,KAAK;gDAAC;;;;;;sDAEvE,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,MAAK;oDACL,SAAS,IAAM,gBAAgB,CAAC;oDAChC,WAAU;oDACV,OAAO,eAAe,kBAAkB;8DAEvC,6BACC,8OAAC;wDAAI,WAAU;wDAAU,MAAK;wDAAO,QAAO;wDAAe,SAAQ;kEACjE,cAAA,8OAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;6EAGvE,8OAAC;wDAAI,WAAU;wDAAU,MAAK;wDAAO,QAAO;wDAAe,SAAQ;;0EACjE,8OAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;0EACrE,8OAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;;;;;;;8DAI3E,8OAAC;oDACC,MAAK;oDACL,SAAS,IAAM,gBAAgB,SAAS,QAAQ;oDAChD,WAAU;oDACV,OAAM;8DAEN,cAAA,8OAAC;wDAAI,WAAU;wDAAU,MAAK;wDAAO,QAAO;wDAAe,SAAQ;kEACjE,cAAA,8OAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAK7E,8OAAC;oCACC,MAAK;oCACL,SAAS,IAAM,iBAAiB,CAAC;oCACjC,WAAU;;sDAEV,8OAAC;4CAAI,WAAU;4CAAe,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACtE,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;wCAEtE,gBAAgB,mBAAmB;;;;;;;;;;;;;wBAKvC,+BACC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,2IAAiB;gCAChB,qBAAqB;gCACrB,WAAU;;;;;;;;;;;sCAMhB,8OAAC;;8CACC,8OAAC;oCAAM,SAAQ;oCAAM,WAAU;;sDAC7B,8OAAC;4CAAI,WAAU;;;;;;wCAA6E;;;;;;;8CAG9F,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,WAAU;oCACV,aAAY;oCACZ,OAAO,SAAS,GAAG;oCACnB,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,KAAK,EAAE,MAAM,CAAC,KAAK;wCAAC;;;;;;;;;;;;sCAKpE,8OAAC;;8CACC,8OAAC;oCAAM,SAAQ;oCAAQ,WAAU;;sDAC/B,8OAAC;4CAAI,WAAU;;;;;;wCAA4E;;;;;;;8CAG7F,8OAAC;oCACC,IAAG;oCACH,MAAM;oCACN,WAAU;oCACV,aAAY;oCACZ,OAAO,SAAS,KAAK;oCACrB,UAAU,CAAC,IAAM,YAAY;4CAAE,GAAG,QAAQ;4CAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wCAAC;;;;;;;;;;;;sCAKtE,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,MAAK;oCACL,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,MAAK;oCACL,UAAU;oCACV,WAAU;8CAET,0BACC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;gDAA6C,MAAK;gDAAO,SAAQ;;kEAC9E,8OAAC;wDAAO,WAAU;wDAAa,IAAG;wDAAK,IAAG;wDAAK,GAAE;wDAAK,QAAO;wDAAe,aAAY;;;;;;kEACxF,8OAAC;wDAAK,WAAU;wDAAa,MAAK;wDAAe,GAAE;;;;;;;;;;;;4CAC/C;;;;;;6DAIR;;0DACE,8OAAC;gDAAI,WAAU;gDAAe,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACtE,cAAA,8OAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;4CAEtE,OAAO,oBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS9C","debugId":null}},
    {"offset": {"line": 2310, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mojee/Desktop/Projects/password-vault/frontend/app/vault/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport PasswordGenerator from '../../components/PasswordGenerator';\r\nimport VaultList from '../../components/VaultList';\r\nimport VaultItemForm from '../../components/VaultItemForm';\r\nimport { VaultItem } from '../../utils/api';\r\n\r\nexport default function VaultPage() {\r\n  const { user, logout, isAuthenticated } = useAuth();\r\n  const router = useRouter();\r\n  const [masterPassword, setMasterPassword] = useState('');\r\n  const [showMasterPasswordPrompt, setShowMasterPasswordPrompt] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingItem, setEditingItem] = useState<VaultItem | undefined>(undefined);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      router.push('/login');\r\n      return;\r\n    }\r\n  }, [isAuthenticated, router]);\r\n\r\n  const handleMasterPasswordSubmit = (password: string) => {\r\n    setMasterPassword(password);\r\n    setShowMasterPasswordPrompt(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    router.push('/');\r\n  };\r\n\r\n  const handleEditItem = (item: VaultItem) => {\r\n    setEditingItem(item);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleSaveItem = () => {\r\n    setShowForm(false);\r\n    setEditingItem(undefined);\r\n    setRefreshTrigger(prev => prev + 1);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setShowForm(false);\r\n    setEditingItem(undefined);\r\n  };\r\n\r\n  if (showMasterPasswordPrompt) {\r\n    return (\r\n      <MasterPasswordPrompt onSubmit={handleMasterPasswordSubmit} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100 dark:from-gray-900 dark:via-gray-800 dark:to-purple-900\">\r\n      {/* Header */}\r\n      <header className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-md shadow-xl border-b border-white/20 dark:border-gray-700/50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex-shrink-0\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"w-10 h-10 bg-gradient-to-br from-blue-600 to-purple-700 rounded-xl flex items-center justify-center mr-3 shadow-lg transform hover:rotate-3 transition-all duration-300\">\r\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h1 className=\"text-xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent\">\r\n                    Password Vault\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center space-x-4\">\r\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Welcome, {user?.email || 'User'}\r\n              </span>\r\n              <button\r\n                onClick={handleLogout}\r\n                className=\"inline-flex items-center px-4 py-2 border border-gray-200 dark:border-gray-600 text-sm font-semibold text-gray-700 dark:text-gray-300 bg-white/80 dark:bg-gray-700/80 backdrop-blur-md rounded-xl hover:bg-white dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 hover:scale-105\"\r\n              >\r\n                Sign Out\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Password Generator */}\r\n          <div className=\"lg:col-span-1\">\r\n            <PasswordGenerator onPasswordGenerated={(password) => console.log('Generated:', password)} />\r\n          </div>\r\n\r\n          {/* Vault Management */}\r\n          <div className=\"lg:col-span-2 space-y-6\">\r\n            {/* Search and Add Button */}\r\n            <div className=\"flex flex-col sm:flex-row gap-4 items-center justify-between\">\r\n              <div className=\"relative flex-1 max-w-md\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <svg className=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                  </svg>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search your passwords...\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                  className=\"block w-full pl-10 pr-4 py-3 bg-white/80 dark:bg-gray-700/80 backdrop-blur-md border border-gray-200 dark:border-gray-600 rounded-xl shadow-inner placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 dark:text-white transition-all duration-200\"\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={() => setShowForm(true)}\r\n                className=\"flex items-center px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-bold rounded-xl shadow-lg hover:shadow-xl transition-all duration-200 hover:scale-105\"\r\n              >\r\n                <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                </svg>\r\n                Add Password\r\n              </button>\r\n            </div>\r\n\r\n            {/* Vault List */}\r\n            <VaultList\r\n              masterPassword={masterPassword}\r\n              onEdit={handleEditItem}\r\n              refreshTrigger={refreshTrigger}\r\n              searchQuery={searchQuery}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Vault Item Form Modal */}\r\n        {showForm && (\r\n          <VaultItemForm\r\n            item={editingItem}\r\n            masterPassword={masterPassword}\r\n            onSave={handleSaveItem}\r\n            onCancel={handleCancelEdit}\r\n          />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MasterPasswordPrompt({ onSubmit }: { onSubmit: (password: string) => void }) {\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!password.trim()) {\r\n      setError('Please enter your master password');\r\n      return;\r\n    }\r\n    onSubmit(password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-100 dark:from-gray-900 dark:via-gray-800 dark:to-purple-900 flex items-center justify-center p-4 relative overflow-hidden\">\r\n      {/* Animated background elements */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-blue-400/20 to-purple-600/20 rounded-full mix-blend-multiply filter blur-xl animate-blob\"></div>\r\n        <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-br from-purple-400/20 to-pink-600/20 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-2000\"></div>\r\n      </div>\r\n\r\n      <div className=\"max-w-md w-full space-y-8 relative z-10\">\r\n        <div className=\"text-center\">\r\n          <div className=\"inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-blue-600 to-purple-700 rounded-3xl mb-6 shadow-2xl transform hover:rotate-3 transition-all duration-300 hover:scale-110\">\r\n            <svg className=\"w-10 h-10 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n            </svg>\r\n          </div>\r\n          <h2 className=\"text-4xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 dark:from-white dark:to-gray-300 bg-clip-text text-transparent\">\r\n            Enter Master Password\r\n          </h2>\r\n          <p className=\"mt-3 text-gray-600 dark:text-gray-400\">\r\n            Your master password is needed to decrypt your vault\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-md py-8 px-8 shadow-2xl rounded-2xl border border-white/20 dark:border-gray-700/50\">\r\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n            {error && (\r\n              <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 text-red-700 dark:text-red-400 px-4 py-3 rounded-xl\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              <label htmlFor=\"masterPassword\" className=\"block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\r\n                <div className=\"w-4 h-4 bg-gradient-to-br from-purple-400 to-pink-500 rounded-lg mr-2\"></div>\r\n                Master Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  id=\"masterPassword\"\r\n                  name=\"masterPassword\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  autoComplete=\"current-password\"\r\n                  required\r\n                  className=\"block w-full px-4 py-3 pr-12 bg-white/50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-xl shadow-inner placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 dark:text-white transition-all duration-200 hover:shadow-md focus:bg-white dark:focus:bg-gray-700\"\r\n                  placeholder=\"Enter your master password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  autoFocus\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors duration-200\"\r\n                  title={showPassword ? 'Hide password' : 'Show password'}\r\n                >\r\n                  {showPassword ? (\r\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L8.464 8.464M9.878 9.878A3 3 0 1012 6.5m2.122 2.878l4.242 4.242M15.12 15.12L19.5 19.5\" />\r\n                    </svg>\r\n                  ) : (\r\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                    </svg>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full flex justify-center items-center py-3 px-6 border border-transparent rounded-xl shadow-lg text-base font-bold text-white bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 hover:scale-105 hover:shadow-xl\"\r\n              >\r\n                <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n                </svg>\r\n                Unlock Vault\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}
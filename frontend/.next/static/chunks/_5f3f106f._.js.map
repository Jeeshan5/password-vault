{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mojee/Desktop/Projects/password-vault/frontend/utils/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api',\r\n});\r\n\r\n// Add auth token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport interface VaultItem {\r\n  _id?: string;\r\n  title: string;\r\n  username: string;\r\n  password: string;\r\n  url?: string;\r\n  notes?: string;\r\n  ciphertext?: string;\r\n  iv?: string;\r\n  salt?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\nexport interface CreateVaultItemData {\r\n  title: string;\r\n  username: string;\r\n  password: string;\r\n  url?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateVaultItemData extends CreateVaultItemData {}\r\n\r\n// Vault API functions\r\nexport const vaultAPI = {\r\n  // Get all vault items\r\n  getAll: async (): Promise<{ data: { items: VaultItem[] } }> => {\r\n    const response = await api.get('/vault');\r\n    return { data: { items: response.data } };\r\n  },\r\n\r\n  getItems: async (): Promise<VaultItem[]> => {\r\n    const response = await api.get('/vault');\r\n    return response.data;\r\n  },\r\n\r\n  // Create a new vault item\r\n  create: async (data: CreateVaultItemData): Promise<VaultItem> => {\r\n    const response = await api.post('/vault', data);\r\n    return response.data;\r\n  },\r\n\r\n  createItem: async (data: CreateVaultItemData): Promise<VaultItem> => {\r\n    const response = await api.post('/vault', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Update a vault item\r\n  update: async (id: string, data: UpdateVaultItemData): Promise<VaultItem> => {\r\n    const response = await api.put(`/vault/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  updateItem: async (id: string, data: UpdateVaultItemData): Promise<VaultItem> => {\r\n    const response = await api.put(`/vault/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete a vault item\r\n  delete: async (id: string): Promise<void> => {\r\n    await api.delete(`/vault/${id}`);\r\n  },\r\n\r\n  deleteItem: async (id: string): Promise<void> => {\r\n    await api.delete(`/vault/${id}`);\r\n  },\r\n};\r\n\r\n// Auth API functions\r\nexport const authAPI = {\r\n  // Login\r\n  login: async (email: string, password: string): Promise<{ token: string; user: any }> => {\r\n    const response = await api.post('/auth/login', { email, password });\r\n    return response.data;\r\n  },\r\n\r\n  // Signup\r\n  signup: async (email: string, password: string): Promise<{ token: string; user: any }> => {\r\n    const response = await api.post('/auth/signup', { email, password });\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;"],"names":[],"mappings":";;;;;;;;AAGW;AAHX;;AAEA,MAAM,MAAM,mJAAK,CAAC,MAAM,CAAC;IACvB,SAAS,iEAAmC;AAC9C;AAEA,6BAA6B;AAC7B,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5B,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,AAAC,UAAe,OAAN;IAC3C;IACA,OAAO;AACT;AAEA,qBAAqB;AACrB,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,WAAa,UACd,CAAC;QACK;IAAJ,IAAI,EAAA,kBAAA,MAAM,QAAQ,cAAd,sCAAA,gBAAgB,MAAM,MAAK,KAAK;QAClC,aAAa,UAAU,CAAC;QACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;AA4BK,MAAM,WAAW;IACtB,sBAAsB;IACtB,QAAQ;QACN,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC;QAC/B,OAAO;YAAE,MAAM;gBAAE,OAAO,SAAS,IAAI;YAAC;QAAE;IAC1C;IAEA,UAAU;QACR,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC;QAC/B,OAAO,SAAS,IAAI;IACtB;IAEA,0BAA0B;IAC1B,QAAQ,OAAO;QACb,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,UAAU;QAC1C,OAAO,SAAS,IAAI;IACtB;IAEA,YAAY,OAAO;QACjB,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,UAAU;QAC1C,OAAO,SAAS,IAAI;IACtB;IAEA,sBAAsB;IACtB,QAAQ,OAAO,IAAY;QACzB,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC,AAAC,UAAY,OAAH,KAAM;QAC/C,OAAO,SAAS,IAAI;IACtB;IAEA,YAAY,OAAO,IAAY;QAC7B,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC,AAAC,UAAY,OAAH,KAAM;QAC/C,OAAO,SAAS,IAAI;IACtB;IAEA,sBAAsB;IACtB,QAAQ,OAAO;QACb,MAAM,IAAI,MAAM,CAAC,AAAC,UAAY,OAAH;IAC7B;IAEA,YAAY,OAAO;QACjB,MAAM,IAAI,MAAM,CAAC,AAAC,UAAY,OAAH;IAC7B;AACF;AAGO,MAAM,UAAU;IACrB,QAAQ;IACR,OAAO,OAAO,OAAe;QAC3B,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,eAAe;YAAE;YAAO;QAAS;QACjE,OAAO,SAAS,IAAI;IACtB;IAEA,SAAS;IACT,QAAQ,OAAO,OAAe;QAC5B,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,gBAAgB;YAAE;YAAO;QAAS;QAClE,OAAO,SAAS,IAAI;IACtB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mojee/Desktop/Projects/password-vault/frontend/context/AuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { authAPI } from '@/utils/api';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  signup: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on mount\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        setUser(JSON.parse(userData));\r\n      } catch (error) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await authAPI.login(email, password);\r\n      const { token, user: userData } = response;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const signup = async (email: string, password: string) => {\r\n    try {\r\n      const response = await authAPI.signup(email, password);\r\n      const { token, user: userData } = response;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isLoading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;;;AAHA;;;AAmBA,MAAM,4BAAc,IAAA,8KAAa,EAA8B;AAExD,MAAM,UAAU;;IACrB,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAYN,MAAM,eAAe;QAAC,EAAE,QAAQ,EAAqB;;IAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAc;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAE3C,IAAA,0KAAS;kCAAC;YACR,sCAAsC;YACtC,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,MAAM,WAAW,aAAa,OAAO,CAAC;YAEtC,IAAI,SAAS,UAAU;gBACrB,IAAI;oBACF,QAAQ,KAAK,KAAK,CAAC;gBACrB,EAAE,OAAO,OAAO;oBACd,aAAa,UAAU,CAAC;oBACxB,aAAa,UAAU,CAAC;gBAC1B;YACF;YACA,aAAa;QACf;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,0HAAO,CAAC,KAAK,CAAC,OAAO;YAC5C,MAAM,EAAE,KAAK,EAAE,MAAM,QAAQ,EAAE,GAAG;YAElC,aAAa,OAAO,CAAC,SAAS;YAC9B,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAC5C,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,MAAM,SAAS,OAAO,OAAe;QACnC,IAAI;YACF,MAAM,WAAW,MAAM,0HAAO,CAAC,MAAM,CAAC,OAAO;YAC7C,MAAM,EAAE,KAAK,EAAE,MAAM,QAAQ,EAAE,GAAG;YAElC,aAAa,OAAO,CAAC,SAAS;YAC9B,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAC5C,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,QAAQ;IACV;IAEA,MAAM,QAAQ;QACZ;QACA;QACA;QACA;QACA;QACA,iBAAiB,CAAC,CAAC;IACrB;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;IAlEa;KAAA","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mojee/Desktop/Projects/password-vault/frontend/components/ClientProviders.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { AuthProvider } from '@/context/AuthContext';\r\n\r\nexport default function ClientProviders({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <AuthProvider>\r\n      {children}\r\n    </AuthProvider>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIe,SAAS,gBAAgB,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;IACtC,qBACE,6LAAC,0IAAY;kBACV;;;;;;AAGP;KANwB","debugId":null}}]
}